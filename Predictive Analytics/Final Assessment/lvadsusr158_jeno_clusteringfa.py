# -*- coding: utf-8 -*-
"""LVADSUSR158_Jeno_ClusteringFA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DSVW53EScSvnINx_KPJjzgNfJHd1SwvQ
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler,OneHotEncoder, LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.cluster import KMeans, DBSCAN
from sklearn.metrics import silhouette_score
warnings.filterwarnings('ignore')

df=pd.read_csv("/content/customer_segmentation.csv")
df

df.info()

df.shape

df.describe()

df.dtypes

df.isna().sum()

sns.histplot(df['Income'])

df['Income']=df['Income'].fillna(df['Income'].median())

df.isna().sum()

plt.figure(figsize=(20,12))
sns.boxplot(df)

for i in df.select_dtypes(include='number').columns:
  q1=df[i].quantile(0.25)
  q3=df[i].quantile(0.75)
  iqr=q3-q1
  l=q1-1.5*iqr
  u=q3+1.5*iqr
  df[i]=df[i].clip(lower=l,upper=u)

plt.figure(figsize=(20,12))
sns.boxplot(df)

for column in df.select_dtypes(include=['object']).columns:
  l=LabelEncoder()
  df[column]=l.fit_transform(df[column])

plt.figure(figsize=(20,12))
sns.heatmap(df.corr(),annot=True)

scaler = MinMaxScaler()
scaled = scaler.fit_transform(df)

km = KMeans(n_clusters=2)
km.fit(scaled)
y_pred = km.labels_

df['cluster'] = y_pred

df1 = df[df.cluster == 0]
df2 = df[df.cluster == 1]
centroid = df.groupby('cluster').mean()[['Income','MntMeatProducts']]
plt.figure(figsize=(12,6))
plt.scatter(df1['Income'],df1['MntMeatProducts'],color="blue")
plt.scatter(df2['Income'],df2['MntMeatProducts'],color="red")
plt.scatter(centroid['Income'],centroid['MntMeatProducts'],marker='*',color="black")

k_rng = range(1,10)
sse = []
for k in k_rng:
  km = KMeans(n_clusters=k)
  km.fit_predict(df)
  sse.append(km.inertia_)

plt.xlabel('Clusters')
plt.ylabel('Sum of squared error')
plt.plot(k_rng,sse,marker='.')

silhouette_score(df[['Income','MntMeatProducts']],y_pred)

"""Analysis:
K Means Clustering was used for this clustering problem. The null values were handlded and the outliers were also detected and handled. The elbow graph suggested for the data to be clustered as 2 and hence the k value was assigned as 2. Centroids were plotted and the values nearest to the centroids were clustered accordingly as red and blue.
"""