# -*- coding: utf-8 -*-
"""LVADSUSR158_Jeno_Allwyn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15CoEbQTwY484sa6HdJN6NK9CE8vpenqG
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#1
ipl=pd.read_csv("/content/Final Dataset - IPL.csv")
df=pd.DataFrame(ipl)
df.info()

#The .info() functions provides basic details about the dataset. It lists all the columns,it's count,null values and datatype.

#2
if df.isna().any().any():
  df.fillna('-')
  print("Missing values present")
else:
  print("No missing values")

#There were no missing values or null found in this dataset and hence the else part of the if loop is printed

if df.duplicated().any():
  df.drop()
  print("Duplicated values present")
else:
  print("No duplicate values")

#There was no duplicate data that was found in this dataset. If there was duplicate data, the respective data would have been dropped

#3
mean=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].mean()
median=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].median()
mode=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].mode()
std_dev=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].std()
variance=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].var()
range=df[['first_ings_score','first_ings_wkts','second_ings_score','first_ings_wkts']].apply(lambda x: x.max() - x.min())

print("The average of the runs scored and wickets taken in the tournament are:\n")
print(mean)
print("The middle values of the runs scored and wickets taken in the tournament are:\n")
print(median)
print("The mode of the runs scored and wickets taken in the tournament are:\n")
print(mode)
print("The standard deviation of the runs scored and wickets taken in the tournament are:\n")
print(std_dev)
print("The variance of the runs scored and wickets taken in the tournament are:\n")
print(variance)
print("The range of the runs scored and wickets taken in the tournament are:\n")
print(range)

#4
df['second_ings_score'].plot(kind='line', figsize=(8, 4), title='second innings score')
plt.xlabel("NUmber of Matches")
plt.ylabel("Scores")
#The tournament seems to have started on a high for the second innings totals but it falls into lull and
# picks up back again towards the end

df.plot(kind='scatter', x='first_ings_score', y='first_ings_wkts', s=32, alpha=.8)
plt.title("Relationship betwwen first innings score and wickets")

#This scatter chart shows that the lesser the runs scored by the team the greater the number of wickets that fall

df['first_ings_score'].plot(kind='hist', bins=10, title='Range of first innings score')

#This histogram chart shows the frequency that the teams cross a certain number of runs. The range of 150 and 160 is the most
#scored range.

df.groupby('venue').size().plot(kind='barh')
plt.title("Number of Mataches in each Venue")
plt.xlabel("Number of Matches")
plt.ylabel("Venue")

#The below data shows the number of matches held in each venue,while mumbai hosted the most games
#Kolkata hosted lesser games

#5
a=df[['first_ings_score','second_ings_score','highscore']]
res=a.corr()
sns.heatmap(res,annot=True)
plt.title("Correlation between first innings,second innings and high scores")

#This heatmap shows that when a first innings score is high,the decond innings score is also high
#and there is also a high score that is scored by a player when comparing the other two

plt.figure(figsize=(10,6))
sns.scatterplot(data=df,x='toss_winner',y='toss_decision')
plt.title("Relationship between Teams that won toss and their decisons")

#From the below data we can infer that while every team has decided to field atleast once after winning the toss,
#Delhi and mumbai have never decided to bat first after winning a toss

#6
plt.figure(figsize=(10,6))
df1=df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']]
sns.boxplot(df1)

#Outliers are values that are very separated from the common range of values.In this dataset there is not need to
#drop the outliers as it provides valuable info towards a team's good or bad performance. For example in the first innings
#score the outlier is that bangalore scored just 68 runs.

#7
plt.figure(figsize=(10,6))
df1=df[['team1','venue','match_winner','toss_winner']]
res=df1.groupby('toss_winner')['match_winner'].count().sort_values(ascending=False).reset_index()
sns.lineplot(data=res,x='toss_winner',y='match_winner')
plt.title("Toss winner and match winner")
plt.xlabel("Team")
plt.ylabel("Matches won")
# The below shows that gujarat has won the most matches after winning the toss

#8
df1=df.groupby(['player_of_the_match','match_winner'])['match_id'].count().sort_values(ascending=False).head(10).reset_index()
sns.barplot(data=df1,x='match_id',y='player_of_the_match')
plt.title("Most player of the match awards by players")
plt.xlabel("Number of Times")
plt.ylabel("Player Name")

#The bar chart below indicates the best performing players irrespective of batting or bowling as these are the
#players who have received the most player of the match awards

#9
#One of the main takeaways from this dataset is that the ipl was conducted mostly in mumbai and cities like ahmedabad and kolkata
#didn't get to host many matches.

df.groupby('venue').size().plot(kind='barh')
plt.title("Number of Mataches in each Venue")
plt.xlabel("Number of Matches")
plt.ylabel("Venue")

#Teams also chose to field first a lot in this tournament. The dew may have played a factor in that decision and
# the season in which the ipl is played also needs to be assessed

plt.figure(figsize=(10,6))
sns.scatterplot(data=df,x='toss_winner',y='toss_decision')
plt.title("Relationship between Teams that won toss and their decisons")